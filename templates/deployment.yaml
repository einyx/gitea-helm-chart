apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "gitea.fullname" . }}
  labels:
    app: {{ template "gitea.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "gitea.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "gitea.fullname" . }}
    spec:
      securityContext:
        runAsUser: 1000 
        supplementalGroups: [1000,65534]
        fsGroup: 1000
      containers:
      {{- if .Values.useInPodPostgres }}
      {{ include "postgres" . | indent 6 }}
      {{- end -}}
      {{ include "gitea" . | indent 6 }}
      {{ include "memcached" . | indent 6 }}
      volumes:
      - name: gitea-data
      {{- if .Values.persistence.enabled }}
        {{- if .Values.persistence.directGiteaVolumeMount }}
{{ tpl .Values.persistence.directGiteaVolumeMount . | indent 8 }}
        {{- else }}
        persistentVolumeClaim:
         claimName: {{ .Values.persistence.existingGiteaClaim | default (include "gitea.fullname" .) }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if (.Values.useInPodPostgres) }}
      - name: postgres-data
      {{- end }}
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingPostgresClaim | default (include "postgresql.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: gitea-config
        configMap:
          name: {{ template "gitea.fullname" . }}

      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
